{"version":3,"sources":["state/DragSubject.ts","tools/Vec.ts","tools/index.ts","objects/Camera.ts","state/actions.ts","objects/PovSphere.ts","objects/Sphere.ts","objects/ReflSphere.ts","objects/PovWall.ts","state/selectors.ts","state/reducer.ts","state/index.ts","Camera.tsx","Sphere.tsx","ReflSphere.tsx","Rays.tsx","Room.tsx","hooks/useMouse.ts","hooks/useBounds.ts","Pov.tsx","App.tsx","index.tsx"],"names":["Type","DragSubject","type","offset","handlers","this","None","none","CamRoot","camRoot","CamPan","camPan","SphereRoot","sphereRoot","SphereScale","sphereScale","out","Vec","x","y","rhs","f","angle","cos","Math","sin","sqrt","length","Error","scale","atan2","low","high","clamp","n","min","max","ActionType","Camera","pos","fl","width","rotated","minus","rotate","PI","dist","centeredX","abs","POV_WIDTH","transformedPos","PovSphere","radius","Sphere","cam","transformPos","r","ReflSphere","PovWall","className","updateBounds","bounds","UpdateBounds","payload","mouseDownCamRoot","MouseDownCamRoot","mouseDownCamPan","MouseDownCamPan","mouseDownSphereRoot","MouseDownSphereRoot","mouseDownSphereScale","MouseDownSphereScale","mouseMove","MouseMove","mouseUp","MouseUp","state","sphere","reflSphere","reflX","ROOM_WIDTH","povSphere","transform","povReflSphere","povWalls","corners","ROOM_CORNERS","map","corner","xs","i","push","slice","bunchBy","filter","c1","c2","clipPos","c1Name","c2Name","name","CornerName","NW","NE","SE","SW","edgeX","raysInfo","mirrorCamPos","tanLength","wingAngle","wingBase","norm","mirrorWing1","plus","mirrorWing2","dx1","dx2","y1","y2","wing1","wing2","sphereRayInfo","reflRayInfo","reflWing1","reflWing2","reducer","action","reduceUpdateBounds","dragSubject","reduceMouseDownCamRoot","reduceMouseDownCamPan","reduceMouseDownSphereRoot","reduceMouseDownSphereScale","mousePos","match","moveTo","diff","panTo","clampRect","reduceMouseMove","reduceMouseUp","ROOM_HEIGHT","POV_HEIGHT","initState","left","top","StateContext","React","createContext","dispatch","useContext","S","fwd","panCtrl","wingOut","triPath","d","cx","cy","onMouseDown","A","ctrl","e","clientX","clientY","Rays","sphereRay","reflSphereRay","mirrorRay","Room","ref","useRef","onMove","onUp","useLayoutEffect","handleMove","current","handleUp","document","addEventListener","removeEventListener","useMouse","onChange","useState","setBounds","handler","recomputeBounds","useCallback","getBoundingClientRect","window","useBounds","id","height","x1","x2","Pov","wall","App","useReducer","Provider","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.675fdf50.chunk.js","sourcesContent":["import { Vec } from '../tools';\n\nexport class DragSubject {\n  private type: Type;\n  private offset?: Vec;\n\n  static None(): DragSubject {\n    const out = new DragSubject();\n    out.type = Type.None;\n    return out;\n  }\n\n  static CamRoot(): DragSubject {\n    const out = new DragSubject();\n    out.type = Type.CamRoot;\n    return out;\n  }\n\n  static CamPan(): DragSubject {\n    const out = new DragSubject();\n    out.type = Type.CamPan;\n    return out;\n  }\n\n  static SphereRoot(offset: Vec): DragSubject {\n    const out = new DragSubject();\n    out.type = Type.SphereRoot;\n    out.offset = offset;\n    return out;\n  }\n\n  static SphereScale(): DragSubject {\n    const out = new DragSubject();\n    out.type = Type.SphereScale;\n    return out;\n  }\n\n  match<A>(handlers: MatchHandlers<A>): A {\n    switch (this.type) {\n      case Type.None:\n        return handlers.none();\n      case Type.CamRoot:\n        return handlers.camRoot();\n      case Type.CamPan:\n        return handlers.camPan();\n      case Type.SphereRoot:\n        return handlers.sphereRoot(this.offset as Vec);\n      case Type.SphereScale:\n        return handlers.sphereScale();\n    }\n  }\n}\n\nenum Type {\n  None = 'None',\n  CamRoot = 'CamRoot',\n  CamPan = 'CamPan',\n  SphereRoot = 'SphereRoot',\n  SphereScale = 'SphereScale',\n}\n\ninterface MatchHandlers<A> {\n  none: () => A;\n  camRoot: () => A;\n  camPan: () => A;\n  sphereRoot: (offset: Vec) => A;\n  sphereScale: () => A;\n}\n","import { clamp } from './index';\n\nexport class Vec {\n  constructor(public x: number, public y: number) {}\n\n  plus(rhs: Vec): Vec {\n    return new Vec(this.x + rhs.x, this.y + rhs.y);\n  }\n\n  minus(rhs: Vec): Vec {\n    return new Vec(this.x - rhs.x, this.y - rhs.y);\n  }\n\n  scale(f: number): Vec {\n    return new Vec(f * this.x, f * this.y);\n  }\n\n  rotate(angle: number): Vec {\n    const { x, y } = this;\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n\n    return new Vec(cos * x - sin * y, sin * x + cos * y);\n  }\n\n  length(): number {\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\n  }\n\n  norm(): Vec {\n    const length = this.length();\n    if (length === 0) {\n      throw new Error('attempt to norm 0-vector');\n    }\n\n    return this.scale(1 / length);\n  }\n\n  angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  clampRect(low: Vec, high: Vec): Vec {\n    return new Vec(clamp(this.x, low.x, high.x), clamp(this.y, low.y, high.y));\n  }\n}\n","export * from './Vec';\n\nexport function clamp(n: number, min: number, max: number): number {\n  if (n < min) {\n    return min;\n  } else if (n > max) {\n    return max;\n  } else {\n    return n;\n  }\n}\n\nexport function bunchBy<A>(xs: A[], n: number): A[][] {\n  const out = [];\n\n  for (let i = 0; i < xs.length - n + 1; i++) {\n    out.push(xs.slice(i, i + n));\n  }\n\n  return out;\n}\n","import { Vec } from '../tools';\nimport { POV_WIDTH } from '../state';\n\nexport class Camera {\n  constructor(\n    public pos: Vec,\n    public angle: number,\n    public fl: number,\n    public width: number\n  ) {}\n\n  moveTo(pos: Vec): Camera {\n    return new Camera(pos, this.angle, this.fl, this.width);\n  }\n\n  panTo(angle: number): Camera {\n    return new Camera(this.pos, angle, this.fl, this.width);\n  }\n\n  transformPos(pos: Vec): Vec {\n    const translated = pos.minus(this.pos);\n    const rotated = translated.rotate(-this.angle + Math.PI / 2);\n\n    const { x, y } = rotated;\n    const clipX = -(this.fl * x) / Math.abs(y);\n    const dist = y;\n    const centeredX = ((clipX + this.width / 2) / this.width) * POV_WIDTH;\n\n    return new Vec(centeredX, dist);\n  }\n\n  insideViewbox(transformedPos: Vec): boolean {\n    return (\n      transformedPos.y > 0 &&\n      transformedPos.x >= 0 &&\n      transformedPos.x < POV_WIDTH\n    );\n  }\n}\n","import { Action } from './index';\nimport { Vec } from '../tools';\nimport { Bounds } from '../hooks';\n\nexport enum ActionType {\n  UpdateBounds = 'UpdateBounds',\n  MouseDownCamRoot = 'MouseDownCamRoot',\n  MouseDownCamPan = 'MouseDownCamPan',\n  MouseDownSphereRoot = 'MouseDownSphereRoot',\n  MouseDownSphereScale = 'MouseDownSphereScale',\n  MouseMove = 'MouseMove',\n  MouseUp = 'MouseUp',\n}\n\nexport function updateBounds(bounds: Bounds): Action {\n  return { type: ActionType.UpdateBounds, payload: bounds };\n}\n\nexport function mouseDownCamRoot(): Action {\n  return { type: ActionType.MouseDownCamRoot };\n}\n\nexport function mouseDownCamPan(): Action {\n  return { type: ActionType.MouseDownCamPan };\n}\n\nexport function mouseDownSphereRoot(offset: Vec): Action {\n  return { type: ActionType.MouseDownSphereRoot, payload: offset };\n}\n\nexport function mouseDownSphereScale(): Action {\n  return { type: ActionType.MouseDownSphereScale };\n}\n\nexport function mouseMove(pos: Vec): Action {\n  return { type: ActionType.MouseMove, payload: pos };\n}\n\nexport function mouseUp(): Action {\n  return { type: ActionType.MouseUp };\n}\n","import { Vec } from '../tools';\n\nexport class PovSphere {\n  constructor(public pos: Vec, public radius: number) {}\n}\n","import { Vec } from '../tools';\nimport { POV_WIDTH } from '../state';\nimport { Transformable } from './index';\nimport { PovSphere } from './PovSphere';\nimport { Camera } from './Camera';\n\nexport class Sphere implements Transformable<PovSphere> {\n  constructor(public pos: Vec, public radius: number, public angle: number) {}\n\n  moveTo(pos: Vec): Sphere {\n    return new Sphere(pos, this.radius, this.angle);\n  }\n\n  scale(radius: number, angle: number): Sphere {\n    return new Sphere(this.pos, radius, angle);\n  }\n\n  transform(cam: Camera): PovSphere {\n    const pos = cam.transformPos(this.pos);\n    // KLUDGE\n    const r = ((cam.fl * this.radius) / pos.y / cam.width) * POV_WIDTH;\n    return new PovSphere(pos, r);\n  }\n}\n","import { Vec } from '../tools';\nimport { POV_WIDTH } from '../state';\nimport { Transformable } from './index';\nimport { PovSphere } from './PovSphere';\nimport { Camera } from './Camera';\n\nexport class ReflSphere implements Transformable<PovSphere> {\n  constructor(public pos: Vec, public radius: number) {}\n\n  transform(cam: Camera): PovSphere {\n    const pos = cam.transformPos(this.pos);\n    // KLUDGE\n    const r = ((cam.fl * this.radius) / pos.y / cam.width) * POV_WIDTH;\n    return new PovSphere(pos, r);\n  }\n}\n","export class PovWall {\n  constructor(\n    public x: number,\n    public width: number,\n    public className: string\n  ) {}\n}\n","import {\n  State,\n  ROOM_CORNERS,\n  CornerName,\n  ROOM_WIDTH,\n  POV_WIDTH,\n} from './index';\nimport { Camera, Sphere, ReflSphere, PovSphere, PovWall } from '../objects';\nimport { Vec, bunchBy } from '../tools';\nimport { Bounds } from '../hooks';\n\nexport function bounds(state: State): Bounds {\n  return state.bounds;\n}\n\nexport function cam(state: State): Camera {\n  return state.cam;\n}\n\nexport function sphere(state: State): Sphere {\n  return state.sphere;\n}\n\nexport function reflSphere(state: State): ReflSphere {\n  const { pos, radius } = state.sphere;\n\n  const reflX = ROOM_WIDTH + ROOM_WIDTH - pos.x;\n  return new ReflSphere(new Vec(reflX, pos.y), radius);\n}\n\nexport function povSphere(state: State): PovSphere | null {\n  const sphere = state.sphere.transform(state.cam);\n  if (sphere.pos.y <= 0) {\n    return null;\n  } else {\n    return sphere;\n  }\n}\n\nexport function povReflSphere(state: State): PovSphere | null {\n  const sphere = reflSphere(state).transform(state.cam);\n  if (sphere.pos.y <= 0) {\n    return null;\n  } else {\n    return sphere;\n  }\n}\n\nexport function povWalls(state: State): PovWall[] {\n  const corners = ROOM_CORNERS.map(corner => ({\n    ...corner,\n    pos: state.cam.transformPos(corner.pos),\n  }));\n\n  const walls = bunchBy([...corners, corners[0]], 2);\n\n  return walls\n    .filter(([c1, c2]) => c1.pos.y > 0 || c2.pos.y > 0)\n    .map(([c1, c2]) => {\n      const c1p = { ...c1, pos: clipPos(c1.pos) };\n      const c2p = { ...c2, pos: clipPos(c2.pos) };\n      return [c1p, c2p];\n    })\n    .map(([c1, c2]) => {\n      const x = c1.pos.x;\n      const width = c2.pos.x - c1.pos.x;\n      const className = wallClassName(c1.name, c2.name);\n      return new PovWall(x, width, className);\n    });\n}\n\nfunction clipPos(pos: Vec): Vec {\n  if (pos.y < 0) {\n    const edgeX = pos.x < POV_WIDTH / 2 ? 0 : POV_WIDTH;\n    return new Vec(edgeX, pos.y);\n  } else {\n    return pos;\n  }\n}\n\nfunction wallClassName(c1Name: CornerName, c2Name: CornerName): string {\n  if (c1Name === CornerName.NW && c2Name === CornerName.NE) {\n    return 'wall north';\n  } else if (c1Name === CornerName.NE && c2Name === CornerName.SE) {\n    return 'wall mirror';\n  } else if (c1Name === CornerName.SE && c2Name === CornerName.SW) {\n    return 'wall south';\n  } else {\n    return 'wall west';\n  }\n}\n\nexport function raysInfo(state: State): RaysInfo {\n  const { sphere, cam } = state;\n  const mirrorCamPos = new Vec(ROOM_WIDTH + ROOM_WIDTH - cam.pos.x, cam.pos.y);\n\n  const dist = mirrorCamPos.minus(sphere.pos);\n  const tanLength = Math.sqrt(dist.length() ** 2 - sphere.radius ** 2);\n  const wingAngle = Math.atan2(tanLength, sphere.radius);\n  const wingBase = dist.norm().scale(sphere.radius);\n  const mirrorWing1 = wingBase.rotate(wingAngle).plus(sphere.pos);\n  const mirrorWing2 = wingBase.rotate(-wingAngle).plus(sphere.pos);\n\n  const dx1 = (ROOM_WIDTH - mirrorWing1.x) / (mirrorCamPos.x - mirrorWing1.x);\n  const dx2 = (ROOM_WIDTH - mirrorWing2.x) / (mirrorCamPos.x - mirrorWing2.x);\n  const y1 = (mirrorCamPos.y - mirrorWing1.y) * dx1 + mirrorWing1.y;\n  const y2 = (mirrorCamPos.y - mirrorWing2.y) * dx2 + mirrorWing2.y;\n\n  const { wing1, wing2 } = sphereRayInfo(state);\n  const { wing1: reflWing1, wing2: reflWing2 } = reflRayInfo(state);\n\n  return {\n    wing1,\n    wing2,\n    reflWing1,\n    reflWing2,\n    mirrorWing1,\n    mirrorWing2,\n    y1,\n    y2,\n  };\n}\n\nexport interface RaysInfo {\n  wing1: Vec;\n  wing2: Vec;\n  reflWing1: Vec;\n  reflWing2: Vec;\n  mirrorWing1: Vec;\n  mirrorWing2: Vec;\n  y1: number;\n  y2: number;\n}\n\nfunction sphereRayInfo(state: State) {\n  const { sphere, cam } = state;\n\n  const dist = cam.pos.minus(sphere.pos);\n  const tanLength = Math.sqrt(dist.length() ** 2 - sphere.radius ** 2);\n  const wingAngle = Math.atan2(tanLength, sphere.radius);\n  const wingBase = dist.norm().scale(sphere.radius);\n  const wing1 = wingBase.rotate(wingAngle).plus(sphere.pos);\n  const wing2 = wingBase.rotate(-wingAngle).plus(sphere.pos);\n\n  return { wing1, wing2 };\n}\n\nfunction reflRayInfo(state: State) {\n  const { cam } = state;\n  const sphere = reflSphere(state);\n\n  const dist = cam.pos.minus(sphere.pos);\n  const tanLength = Math.sqrt(dist.length() ** 2 - sphere.radius ** 2);\n  const wingAngle = Math.atan2(tanLength, sphere.radius);\n  const wingBase = dist.norm().scale(sphere.radius);\n  const wing1 = wingBase.rotate(wingAngle).plus(sphere.pos);\n  const wing2 = wingBase.rotate(-wingAngle).plus(sphere.pos);\n\n  return { wing1, wing2 };\n}\n","import { State, Action, ROOM_WIDTH } from './index';\nimport { ActionType } from './actions';\nimport { DragSubject } from './DragSubject';\nimport { Vec } from '../tools';\nimport { Bounds } from '../hooks';\n\nexport function reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionType.UpdateBounds:\n      return reduceUpdateBounds(state, action.payload);\n    case ActionType.MouseDownCamRoot:\n      return reduceMouseDownCamRoot(state);\n    case ActionType.MouseDownCamPan:\n      return reduceMouseDownCamPan(state);\n    case ActionType.MouseDownSphereRoot:\n      return reduceMouseDownSphereRoot(state, action.payload);\n    case ActionType.MouseDownSphereScale:\n      return reduceMouseDownSphereScale(state);\n    case ActionType.MouseMove:\n      return reduceMouseMove(state, action.payload);\n    case ActionType.MouseUp:\n      return reduceMouseUp(state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceUpdateBounds(state: State, bounds: Bounds): State {\n  return { ...state, bounds };\n}\n\nfunction reduceMouseDownCamRoot(state: State): State {\n  return { ...state, dragSubject: DragSubject.CamRoot() };\n}\n\nfunction reduceMouseDownCamPan(state: State): State {\n  return { ...state, dragSubject: DragSubject.CamPan() };\n}\n\nfunction reduceMouseDownSphereRoot(state: State, offset: Vec): State {\n  return { ...state, dragSubject: DragSubject.SphereRoot(offset) };\n}\n\nfunction reduceMouseDownSphereScale(state: State): State {\n  return { ...state, dragSubject: DragSubject.SphereScale() };\n}\n\nfunction reduceMouseMove(state: State, mousePos: Vec): State {\n  return state.dragSubject.match({\n    none: () => state,\n    camRoot: () => ({ ...state, cam: state.cam.moveTo(mousePos) }),\n    camPan: () => {\n      const diff = mousePos.minus(state.cam.pos);\n      const angle = Math.atan2(diff.y, diff.x);\n      return { ...state, cam: state.cam.panTo(angle) };\n    },\n    sphereRoot: offset => {\n      const { radius: r } = state.sphere;\n      const pos = mousePos\n        .plus(offset)\n        .clampRect(new Vec(r, r), new Vec(ROOM_WIDTH - r, ROOM_WIDTH - r));\n      return { ...state, sphere: state.sphere.moveTo(pos) };\n    },\n    sphereScale: () => {\n      const diff = mousePos.minus(state.sphere.pos);\n      const radius = diff.length();\n      const angle = diff.angle();\n      return { ...state, sphere: state.sphere.scale(radius, angle) };\n    },\n  });\n}\n\nfunction reduceMouseUp(state: State): State {\n  return { ...state, dragSubject: DragSubject.None() };\n}\n","import React from 'react';\nimport { DragSubject } from './DragSubject';\nimport { Vec } from '../tools';\nimport { Camera, Sphere } from '../objects';\nimport { Bounds } from '../hooks';\n\nexport * as Actions from './actions';\nexport * as Selectors from './selectors';\nexport * from './reducer';\n\nexport const ROOM_WIDTH = 400;\nexport const ROOM_HEIGHT = 400;\nexport const POV_WIDTH = 800;\nexport const POV_HEIGHT = 200;\n\nexport interface State {\n  bounds: Bounds;\n  cam: Camera;\n  dragSubject: DragSubject;\n  sphere: Sphere;\n}\n\nexport const initState: State = {\n  bounds: { left: 0, top: 0 },\n  cam: new Camera(new Vec(80, 265), -Math.PI / 8, 60, 120),\n  dragSubject: DragSubject.None(),\n  sphere: new Sphere(new Vec(280, 80), 45, -Math.PI / 4),\n};\n\nexport interface Action {\n  type: string;\n  payload?: any;\n}\n\nexport enum CornerName {\n  NW,\n  NE,\n  SE,\n  SW,\n}\n\nexport const ROOM_CORNERS = [\n  { name: CornerName.NW, pos: new Vec(0, 0) },\n  { name: CornerName.NE, pos: new Vec(ROOM_WIDTH, 0) },\n  { name: CornerName.SE, pos: new Vec(ROOM_WIDTH, ROOM_HEIGHT) },\n  { name: CornerName.SW, pos: new Vec(0, ROOM_HEIGHT) },\n];\n\nexport const StateContext = React.createContext({\n  state: null as any as State,\n  dispatch: null as any as React.Dispatch<Action>,\n});\n","import React from 'react';\nimport { StateContext, Actions as A, Selectors as S } from './state';\nimport { Vec } from './tools';\n\nconst Camera: React.VFC = () => {\n  const { state, dispatch } = React.useContext(StateContext);\n\n  const { pos, angle, fl, width } = S.cam(state);\n\n  const fwd = new Vec(fl, 0).rotate(angle);\n  const panCtrl = pos.plus(fwd);\n\n  const wingOut = fwd\n    .rotate(Math.PI / 2)\n    .norm()\n    .scale(width / 2);\n  const wing1 = panCtrl.plus(wingOut);\n  const wing2 = panCtrl.minus(wingOut);\n\n  const triPath = `M ${pos.x} ${pos.y} L ${wing1.x} ${wing1.y} L ${wing2.x} ${wing2.y} Z`;\n\n  function handleMouseDownRoot() {\n    return dispatch(A.mouseDownCamRoot());\n  }\n\n  function handleMouseDownPan() {\n    return dispatch(A.mouseDownCamPan());\n  }\n\n  return (\n    <g className=\"camera\">\n      <path d={triPath} />\n      <circle\n        className=\"camera-ctrl move\"\n        cx={pos.x}\n        cy={pos.y}\n        r=\"8\"\n        onMouseDown={handleMouseDownRoot}\n      />\n      <circle\n        className=\"camera-ctrl move\"\n        cx={panCtrl.x}\n        cy={panCtrl.y}\n        r=\"8\"\n        onMouseDown={handleMouseDownPan}\n      />\n    </g>\n  );\n};\n\nexport default Camera;\n","import React from 'react';\nimport { StateContext, Actions as A, Selectors as S } from './state';\nimport { Vec } from './tools';\n\nconst Sphere: React.VFC = () => {\n  const { state, dispatch } = React.useContext(StateContext);\n\n  const { pos, radius, angle } = S.sphere(state);\n\n  const ctrl = new Vec(radius, 0).rotate(angle).plus(pos);\n\n  function handleMouseDownRoot(e: React.MouseEvent) {\n    const { left, top } = S.bounds(state);\n    const { clientX, clientY } = e;\n    const mousePos = new Vec(clientX - left, clientY - top);\n    const offset = pos.minus(mousePos);\n    return dispatch(A.mouseDownSphereRoot(offset));\n  }\n\n  function handleMouseDownScale() {\n    return dispatch(A.mouseDownSphereScale());\n  }\n\n  return (\n    <g className=\"sphere\">\n      <circle\n        className=\"move\"\n        cx={pos.x}\n        cy={pos.y}\n        r={radius}\n        onMouseDown={handleMouseDownRoot}\n      />\n      <circle\n        className=\"sphere-ctrl move\"\n        cx={ctrl.x}\n        cy={ctrl.y}\n        r=\"8\"\n        onMouseDown={handleMouseDownScale}\n      />\n    </g>\n  );\n};\n\nexport default Sphere;\n","import React from 'react';\nimport { StateContext, Selectors as S } from './state';\n\nconst ReflSphere: React.VFC = () => {\n  const { state } = React.useContext(StateContext);\n\n  const { pos, radius } = S.reflSphere(state);\n\n  return <circle className=\"refl-sphere\" cx={pos.x} cy={pos.y} r={radius} />;\n};\n\nexport default ReflSphere;\n","import React from 'react';\nimport { StateContext, Selectors as S, ROOM_WIDTH } from './state';\n\nconst Rays: React.VFC = () => {\n  const { state } = React.useContext(StateContext);\n\n  const cam = S.cam(state);\n\n  const {\n    wing1,\n    wing2,\n    reflWing1,\n    reflWing2,\n    mirrorWing1,\n    mirrorWing2,\n    y1,\n    y2,\n  } = S.raysInfo(state);\n\n  const sphereRay = `M ${cam.pos.x} ${cam.pos.y} L ${wing1.x} ${wing1.y} L ${wing2.x} ${wing2.y} Z`;\n  const reflSphereRay = `M ${cam.pos.x} ${cam.pos.y} L ${reflWing1.x} ${reflWing1.y} L ${reflWing2.x} ${reflWing2.y} Z`;\n  const mirrorRay = `M ${ROOM_WIDTH} ${y1} L ${mirrorWing1.x} ${mirrorWing1.y} L ${mirrorWing2.x} ${mirrorWing2.y} L ${ROOM_WIDTH} ${y2} Z`;\n\n  return (\n    <g className=\"rays\">\n      <path d={sphereRay} />\n      <path d={reflSphereRay} />\n      <path d={mirrorRay} />\n    </g>\n  );\n};\n\nexport default Rays;\n","import React from 'react';\nimport { StateContext, Actions as A, ROOM_WIDTH, ROOM_HEIGHT } from './state';\nimport { useMouse, useBounds } from './hooks';\nimport Camera from './Camera';\nimport Sphere from './Sphere';\nimport ReflSphere from './ReflSphere';\nimport Rays from './Rays';\n\nconst Room: React.VFC = () => {\n  const { dispatch } = React.useContext(StateContext);\n\n  const ref = React.useRef(null);\n  const bounds = useBounds(ref, bounds => dispatch(A.updateBounds(bounds)));\n  useMouse(bounds, {\n    onMove: pos => dispatch(A.mouseMove(pos)),\n    onUp: () => dispatch(A.mouseUp()),\n  });\n\n  return (\n    <svg id=\"room\" width={2 * ROOM_WIDTH} height={ROOM_HEIGHT} ref={ref}>\n      <Rays />\n      <Camera />\n\n      <Sphere />\n      <ReflSphere />\n\n      <rect\n        className=\"mirror-room\"\n        x={ROOM_WIDTH}\n        y=\"0\"\n        width={ROOM_WIDTH}\n        height={ROOM_HEIGHT}\n      />\n      <line\n        className=\"mirror\"\n        x1={ROOM_WIDTH}\n        y1=\"0\"\n        x2={ROOM_WIDTH}\n        y2={ROOM_HEIGHT}\n      />\n    </svg>\n  );\n};\n\nexport default Room;\n","import React from 'react';\nimport { Bounds } from './useBounds';\nimport { Vec } from '../tools';\n\nexport function useMouse(bounds: Bounds, handlers: UseMouseHandlers) {\n  const onMove = React.useRef(handlers.onMove);\n  const onUp = React.useRef(handlers.onUp);\n\n  React.useLayoutEffect(() => {\n    function handleMove(e: MouseEvent) {\n      const { clientX, clientY } = e;\n      const { left, top } = bounds;\n      return onMove.current(new Vec(clientX - left, clientY - top));\n    }\n\n    function handleUp() {\n      return onUp.current();\n    }\n\n    document.addEventListener('mousemove', handleMove);\n    document.addEventListener('mouseup', handleUp);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('mouseup', handleUp);\n    };\n  }, [bounds, onMove, onUp]);\n}\n\nexport interface UseMouseHandlers {\n  onMove: (pos: Vec) => unknown;\n  onUp: () => unknown;\n}\n","import React from 'react';\n\nexport function useBounds(\n  ref: React.RefObject<SVGSVGElement>,\n  onChange: (bounds: Bounds) => unknown\n): Bounds {\n  const [bounds, setBounds] = React.useState({ left: 0, top: 0 });\n  const handler = React.useRef(onChange);\n\n  const recomputeBounds = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const { left, top } = ref.current.getBoundingClientRect();\n    setBounds({ left, top });\n    handler.current({ left, top });\n  }, [ref]);\n\n  React.useLayoutEffect(() => {\n    recomputeBounds();\n\n    window.addEventListener('resize', recomputeBounds);\n    return () => window.removeEventListener('resize', recomputeBounds);\n  }, [recomputeBounds]);\n\n  return bounds;\n}\n\nexport interface Bounds {\n  left: number;\n  top: number;\n}\n","import React from 'react';\nimport { StateContext, Selectors as S, POV_WIDTH, POV_HEIGHT } from './state';\n\nconst Pov: React.VFC = () => {\n  const { state } = React.useContext(StateContext);\n\n  const sphere = S.povSphere(state);\n  const reflSphere = S.povReflSphere(state);\n\n  return (\n    <svg id=\"pov\" width={POV_WIDTH} height={POV_HEIGHT}>\n      {reflSphere && (\n        <circle\n          className=\"refl-sphere\"\n          cx={reflSphere.pos.x}\n          cy={POV_HEIGHT / 2}\n          r={reflSphere.radius}\n        />\n      )}\n\n      {S.povWalls(state).map(wall => (\n        <rect\n          key={wall.className}\n          className={wall.className}\n          x={wall.x}\n          width={wall.width}\n          height={POV_HEIGHT}\n        />\n      ))}\n\n      {sphere && (\n        <circle\n          className=\"sphere\"\n          cx={sphere.pos.x}\n          cy={POV_HEIGHT / 2}\n          r={sphere.radius}\n        />\n      )}\n    </svg>\n  );\n};\n\nexport default Pov;\n","import React from 'react';\nimport { StateContext, reducer, initState } from './state';\nimport Room from './Room';\nimport Pov from './Pov';\n\nconst App: React.VFC = () => {\n  const [state, dispatch] = React.useReducer(reducer, initState);\n\n  return (\n    <StateContext.Provider value={{ state, dispatch }}>\n      <main>\n        <Room />\n        <Pov />\n      </main>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}